# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python-poetry

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow

jobs:
  build:
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11.7"
        poetry-version:
          - "1.7.1"
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Remove lock file
      run: rm -f poetry.lock

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry install

    - name: Run python lint
      run: |
        poetry run ruff check src/ tests/

    - name: Run tests
      run: |
        # Run custom `test` command defined in the `[scripts]` block of unittest
        poetry run pytest
